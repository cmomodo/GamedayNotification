AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy Lambda function with Secrets Manager integration

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: arn:aws:sns:us-east-1:449095351082:gd-topic
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "*"
        - PolicyName: SecretsManagerAndKMSAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - kms:Decrypt
                Resource:
                  - arn:aws:secretsmanager:us-east-1:449095351082:secret:mysecret
                  - arn:aws:kms:us-east-1:449095351082:key/039ee43e-87ae-4bfb-aa18-1c6845b3bf6e
              - Effect: Allow
                Action:
                  - kms:GenerateDataKey
                  - kms:Decrypt
                Resource: arn:aws:kms:us-east-1:449095351082:key/039ee43e-87ae-4bfb-aa18-1c6845b3bf6e

  # Lambda Function
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: NBAApiLambda
      Handler: main.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: nba-lambda-cees2
        S3Key: lambda_function.zip
      Environment:
        Variables:
          NBA_API_SECRET_NAME: NBA_API_KEY
          SNS_TOPIC_SECRET_NAME: SNS_TOPIC_ARN
      Timeout: 15

Outputs:
  LambdaFunctionArn:
    Description: ARN of the deployed Lambda function
    Value: !GetAtt MyLambdaFunction.Arn
